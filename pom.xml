<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sitewhere</groupId>
	<artifactId>sitewhere-load-test</artifactId>
	<version>1.0.5</version>
	<packaging>war</packaging>
	<name>SiteWhere Load Test Node</name>

	<repositories>
		<repository>
			<id>jcenter-release</id>
			<name>jcenter</name>
			<url>http://oss.jfrog.org/artifactory/oss-release-local/</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sitewhere.version>1.0.5</sitewhere.version>
		<junit.version>4.9</junit.version>
		<log4j.version>1.2.15</log4j.version>
		<spring.version>3.2.10.RELEASE</spring.version>
		<spring.security.version>3.2.6.RELEASE</spring.security.version>
		<jackson.version>2.1.5</jackson.version>
		<tomcat.version>7.0.62</tomcat.version>
		<server.name>sitewhere-load-test-server</server.name>
	</properties>

	<licenses>
		<license>
			<name>Common Public Attribution License Version 1.0 (CPAL-1.0)</name>
			<url>http://opensource.org/licenses/CPAL-1.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>https://github.com/sitewhere/sitewhere-load-test.git</connection>
		<url>https://github.com/sitewhere/sitewhere-load-test.git</url>
	</scm>
	<developers>
		<developer>
			<id>derekadams</id>
			<name>Derek Adams</name>
			<email>derek.adams@sitewhere.com</email>
		</developer>
	</developers>
	<issueManagement>
		<system>Jira</system>
		<url>https://sitewhere.atlassian.net</url>
	</issueManagement>
	<organization>
		<name>SiteWhere, LLC.</name>
		<url>http://www.sitewhere.com/</url>
	</organization>

	<profiles>
		<profile>
			<id>buildServer</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>get-tomcat</id>
								<phase>compile</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>http://apache.osuosl.org/tomcat/tomcat-7/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.zip</url>
									<unpack>true</unpack>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<md5>38cb959107ca54276d53391f83761793</md5>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<inherited>false</inherited>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<target>
										<delete includeemptydirs="true">
											<fileset dir="${project.build.directory}/apache-tomcat-${tomcat.version}/webapps"
												includes="**/*"/>
										</delete>
										<copy todir="${project.build.directory}/apache-tomcat-${tomcat.version}/webapps">
											<fileset dir="${project.basedir}/deploy">
												<include name="sitewhere-load-test-${project.version}.war"/>
											</fileset>
										</copy>
										<copy todir="${project.build.directory}/apache-tomcat-${tomcat.version}/conf">
											<fileset dir="${project.basedir}/config" includes="**/*" excludes="log4j.xml"/>
										</copy>
										<copy todir="${project.build.directory}/apache-tomcat-${tomcat.version}/lib">
											<fileset dir="${project.basedir}/config" includes="log4j.xml"/>
										</copy>
										<copy todir="${project.build.directory}/apache-tomcat-${tomcat.version}/bin">
											<fileset dir="${project.basedir}/config" includes="setenv.*"/>
										</copy>
										<move todir="${project.build.directory}/${server.name}-${project.version}">
											<fileset dir="${project.build.directory}/apache-tomcat-${tomcat.version}"/>
										</move>
										<zip destfile="${project.basedir}/deploy/${server.name}-${project.version}.zip"
											basedir="${project.build.directory}" includes="${server.name}-${project.version}/**"/>
										<tar tarfile="${project.basedir}/deploy/${server.name}-${project.version}.tar.gz"
											basedir="${project.build.directory}" includes="${server.name}-${project.version}/**"
											excludes="${server.name}-${project.version}/bin/**.sh" longfile="gnu"
											compression="gzip">
											<tarfileset dir="${project.build.directory}/${server.name}-${project.version}/bin"
												prefix="${server.name}-${project.version}/bin" filemode="755">
												<include name="**/*.sh"/>
											</tarfileset>
											<tarfileset src="${project.basedir}/config/policy.tar" prefix="${server.name}-${project.version}/conf"/>
										</tar>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>com.sitewhere</groupId>
			<artifactId>sitewhere-core</artifactId>
			<version>${sitewhere.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-core_2.10</artifactId>
			<version>1.3.5</version>
		</dependency>
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.3.5</version>
		</dependency>
		<dependency>
			<groupId>com.mangofactory</groupId>
			<artifactId>swagger-springmvc</artifactId>
			<version>0.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>3.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.1</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<outputDirectory>${project.basedir}/deploy</outputDirectory>
					<packagingExcludes>
						%regex[WEB-INF/lib/jaxb.*],
						%regex[WEB-INF/lib/jasper.*],
						%regex[WEB-INF/lib/jsp.*],
						%regex[WEB-INF/lib/servlet.*],
						%regex[WEB-INF/lib/log4j.*-2\.1.*]
					</packagingExcludes>
				</configuration>
				<executions>
					<execution>
						<id>default-war</id>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<property name="project.version" value="${project.version}"></property>
								<ant antfile="generator.xml" dir="." target="generate-versions" inheritRefs="true"/>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/target/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>